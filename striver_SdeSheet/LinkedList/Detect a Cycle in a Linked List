Approcah1: Brute force   --> using map take extra space T(C) - O(N) , S(C) - O(N)
 bool detectLoop(Node* head)
    {
        if(!head)
            return false;
        
      unordered_map<Node*, int> visited;
      while(head){
          if(!visited[head]){
              visited[head] = 1;
              head = head->next;
          }
          else
              return true;
          
      }
      return false;
    }





Approach2 : Optimal approach (using Floyd Cycle Detection Algorithm)
bool detectCycle(Node *head)
{
	Node* fast = head;
    Node* slow = head;
    while(fast != NULL && fast -> next != NULL){
        fast = fast->next->next;
        slow = slow->next;
        if(slow == fast){
            return true;
        }
    }
    return false;
}
