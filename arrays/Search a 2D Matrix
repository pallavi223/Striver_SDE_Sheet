
Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
Output: true

 
############### Using Linear Search - T(C) : O(m*n)   S(C): O(1)

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        bool ans = false;
        for(int i=0;i<matrix.size();i++){
            for(int j=0;j<matrix[0].size();j++){
                if(matrix[i][j] == target)
                  ans = true;
                
            }
        }
        return ans;
    }
};


######################## Using Binary Search  T(C) - O(log(m*n))  S(C) - O(1)

   bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
        int start = 0;
        if(!matrix.size()){
            return false;
        }
        int row= matrix.size();
        int col = matrix[0].size();
        int end = (row * col)-1;

        while(start <= end){
            int mid = start+(end - start)/2;

            if(matrix[mid/col][mid%col] == target){
                return true;
            }
            if(matrix[mid/col][mid%col] < target){
                start = mid+1;
            }
            else{
                end = mid-1;
            }
        }
        return false;
    }
